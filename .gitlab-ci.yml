# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/pipeline/#customization
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
  - test
  - build
  - image

variables:
  IMAGE_NAME: dev
  IMAGE_TAG: latest

sast:
  stage: test
include:
  - template: Security/SAST.gitlab-ci.yml

build-project:
  stage: build
  image: node:14
  script:
    - npm install
    - npm run build

build-docker-image:
  stage: image
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  script:
    - docker info
      if [ "$CI_COMMIT_BRANCH" == "main" ]; then
      export IMAGE_NAME=production
      elif [ "$CI_COMMIT_BRANCH" == "development" ]; then
      export IMAGE_NAME=staging
      else
      echo "Skipping Docker image build for branch $CI_COMMIT_BRANCH"
      exit 0
      fi
      - docker build -t $CI_REGISTRY_IMAGE/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA .
      - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
      - docker push $CI_REGISTRY_IMAGE/$IMAGE_NAME:$CI_COMMIT_SHORT_SHA
